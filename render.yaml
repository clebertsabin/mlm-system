services:
  - type: web
    name: mlms-frontend
    env: node
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: REACT_APP_API_URL
        value: https://mlms-backend.onrender.com
      - key: REACT_APP_CORS_ORIGIN
        value: https://mlms-frontend.onrender.com
    healthCheckPath: /health
    autoDeploy: true

  - type: web
    name: mlms-backend
    env: node
    buildCommand: cd backend && npm install
    startCommand: cd backend && npm start
    envVars:
      - key: MONGODB_URI
        value: mongodb+srv://mlm_user:mlms-pass-123@mymlmproject.vfknhg6.mongodb.net/mlms?retryWrites=true&w=majority&appName=mymlmproject
      - key: PORT
        value: 3000
      - key: CORS_ORIGIN
        value: https://mlms-frontend.onrender.com
      - key: JWT_SECRET
        value: your-jwt-secret-key
      - key: NODE_ENV
        value: production
    healthCheckPath: /health
    autoDeploy: true

cronJobs:
  - name: daily-report
    schedule: "0 0 * * *"
    command: cd backend && node scripts/dailyReport.js
    envVars:
      - key: MONGODB_URI
        value: mongodb+srv://mlm_user:mlms-pass-123@mymlmproject.vfknhg6.mongodb.net/mlms?retryWrites=true&w=majority&appName=mymlmproject
      - key: EMAIL_USER
        value: your-email@example.com
      - key: EMAIL_PASSWORD
        value: your-email-password
      - key: ADMIN_EMAIL
        value: admin@example.com

  - name: verify-login-page
    schedule: "*/15 * * * *"
    command: cd backend && node scripts/verifyLoginPage.js
    envVars:
      - key: FRONTEND_URL
        value: https://mlms-frontend.onrender.com 